{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./AutoTexte.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const AutoTypeText=_ref=>{let{text}=_ref;const[displayedText,setDisplayedText]=useState(\"\");useEffect(()=>{let index=0;const intervalId=setInterval(()=>{setDisplayedText(prevText=>{if(index<text.length){// un qvariable qui prend à chaque fois une nouvelle valeur en fonction de INDEX\nconst reversedText=prevText+text.charAt(index);index++;return reversedText;}else{// Une fois que tout le texte a été affiché, réinitialisez l'index\nindex=0;return\"\";}});},200);// pour Ajustez la vitesse de frappe en millisecondes selon vos préférences\n// Nettoyez l'intervalle lors du démontage du composant\nreturn()=>clearInterval(intervalId);},[text]);return/*#__PURE__*/_jsx(\"h1\",{className:\"auto-typing-text\",children:displayedText});};export default AutoTypeText;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","AutoTypeText","_ref","text","displayedText","setDisplayedText","index","intervalId","setInterval","prevText","length","reversedText","charAt","clearInterval","className","children"],"sources":["C:/Users/seghi/OneDrive/Desktop/SeghirOuali-CV/monportfolio/src/AutoExecute/AutoTexte.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./AutoTexte.css\";\r\nconst AutoTypeText = ({ text }) => {\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n\r\n    const intervalId = setInterval(() => {\r\n      setDisplayedText((prevText) => {\r\n        if (index < text.length) {\r\n         // un qvariable qui prend à chaque fois une nouvelle valeur en fonction de INDEX\r\n          const reversedText = prevText + text.charAt(index);\r\n          index++;\r\n          return reversedText;\r\n        } else {\r\n          // Une fois que tout le texte a été affiché, réinitialisez l'index\r\n          index = 0;\r\n          return \"\";\r\n        }\r\n      });\r\n    }, 200); // pour Ajustez la vitesse de frappe en millisecondes selon vos préférences\r\n\r\n    // Nettoyez l'intervalle lors du démontage du composant\r\n    return () => clearInterval(intervalId);\r\n  }, [text]);\r\n\r\n  return <h1 className=\"auto-typing-text\">{displayedText}</h1>;\r\n};\r\nexport default AutoTypeText;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACzB,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAEtDD,SAAS,CAAC,IAAM,CACd,GAAI,CAAAS,KAAK,CAAG,CAAC,CAEb,KAAM,CAAAC,UAAU,CAAGC,WAAW,CAAC,IAAM,CACnCH,gBAAgB,CAAEI,QAAQ,EAAK,CAC7B,GAAIH,KAAK,CAAGH,IAAI,CAACO,MAAM,CAAE,CACxB;AACC,KAAM,CAAAC,YAAY,CAAGF,QAAQ,CAAGN,IAAI,CAACS,MAAM,CAACN,KAAK,CAAC,CAClDA,KAAK,EAAE,CACP,MAAO,CAAAK,YAAY,CACrB,CAAC,IAAM,CACL;AACAL,KAAK,CAAG,CAAC,CACT,MAAO,EAAE,CACX,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,GAAG,CAAC,CAAE;AAET;AACA,MAAO,IAAMO,aAAa,CAACN,UAAU,CAAC,CACxC,CAAC,CAAE,CAACJ,IAAI,CAAC,CAAC,CAEV,mBAAOH,IAAA,OAAIc,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAEX,aAAa,CAAK,CAAC,CAC9D,CAAC,CACD,cAAe,CAAAH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}