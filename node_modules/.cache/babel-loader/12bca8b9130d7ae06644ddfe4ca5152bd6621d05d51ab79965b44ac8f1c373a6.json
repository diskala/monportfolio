{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seghi\\\\OneDrive\\\\Desktop\\\\SeghirOuali-CV\\\\monportfolio\\\\src\\\\AutoExecute\\\\AutoTexte.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./AutoTexte.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoTypeText = ({\n  text\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  useEffect(() => {\n    let index = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText(prevText => {\n        if (index < text.length) {\n          // un qvariable qui prend à chaque fois une nouvelle valeur en fonction de INDEX\n          const reversedText = prevText + text.charAt(index);\n          index++;\n          return reversedText;\n        } else {\n          // Une fois que tout le texte a été affiché, réinitialisez l'index\n          index = 0;\n          return \"\";\n        }\n      });\n    }, 200); // pour Ajustez la vitesse de frappe en millisecondes selon vos préférences\n\n    // Nettoyez l'intervalle lors du démontage du composant\n    return () => clearInterval(intervalId);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"auto-typing-text\",\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_s(AutoTypeText, \"Jd13zeE1AOcNtwxOaM+TQzFRVsM=\");\n_c = AutoTypeText;\nexport default AutoTypeText;\nvar _c;\n$RefreshReg$(_c, \"AutoTypeText\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AutoTypeText","text","_s","displayedText","setDisplayedText","index","intervalId","setInterval","prevText","length","reversedText","charAt","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/seghi/OneDrive/Desktop/SeghirOuali-CV/monportfolio/src/AutoExecute/AutoTexte.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./AutoTexte.css\";\r\nconst AutoTypeText = ({ text }) => {\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n\r\n    const intervalId = setInterval(() => {\r\n      setDisplayedText((prevText) => {\r\n        if (index < text.length) {\r\n         // un qvariable qui prend à chaque fois une nouvelle valeur en fonction de INDEX\r\n          const reversedText = prevText + text.charAt(index);\r\n          index++;\r\n          return reversedText;\r\n        } else {\r\n          // Une fois que tout le texte a été affiché, réinitialisez l'index\r\n          index = 0;\r\n          return \"\";\r\n        }\r\n      });\r\n    }, 200); // pour Ajustez la vitesse de frappe en millisecondes selon vos préférences\r\n\r\n    // Nettoyez l'intervalle lors du démontage du composant\r\n    return () => clearInterval(intervalId);\r\n  }, [text]);\r\n\r\n  return <h1 className=\"auto-typing-text\">{displayedText}</h1>;\r\n};\r\nexport default AutoTypeText;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,GAAG,CAAC;IAEb,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,gBAAgB,CAAEI,QAAQ,IAAK;QAC7B,IAAIH,KAAK,GAAGJ,IAAI,CAACQ,MAAM,EAAE;UACxB;UACC,MAAMC,YAAY,GAAGF,QAAQ,GAAGP,IAAI,CAACU,MAAM,CAACN,KAAK,CAAC;UAClDA,KAAK,EAAE;UACP,OAAOK,YAAY;QACrB,CAAC,MAAM;UACL;UACAL,KAAK,GAAG,CAAC;UACT,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET;IACA,OAAO,MAAMO,aAAa,CAACN,UAAU,CAAC;EACxC,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAIc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAEX;EAAa;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC9D,CAAC;AAAChB,EAAA,CA1BIF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}